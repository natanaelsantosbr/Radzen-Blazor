@inherits LayoutComponentBase
@inject NotificationService NotificationService
@inject NavigationManager NavigationManager
<RadzenComponents />

<RadzenLayout>
    <RadzenHeader>
        <ChildContent>
            <RadzenRow AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start" Gap="0px">
                <RadzenColumn Size="5">
                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0">
                        <RadzenSidebarToggle Click="@(() => sidebar1Expanded = !sidebar1Expanded)" />
                        <RadzenLabel Text="MyApp" />
                    </RadzenStack>
                </RadzenColumn>
                <RadzenColumn Size="7">
                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End">
                        <RadzenSplitButton Click=@(args => OnClick(args)) AlwaysOpenPopup="true" Icon="account_circle">
                            <ChildContent>
                                <RadzenSplitButtonItem Text="Dashboard" Value="dashboard" Icon="dashboard" />
                                <RadzenSplitButtonItem Text="Configurações" Value="settings" Icon="settings" />
                                <RadzenSplitButtonItem Text="Ajuda/Suporte" Value="help_outline" Icon="help_outline" />
                                <RadzenSplitButtonItem Text="Sair" Value="exit_to_app" Icon="exit_to_app" />
                            </ChildContent>
                        </RadzenSplitButton>
                    </RadzenStack>
                </RadzenColumn>
            </RadzenRow>
        </ChildContent>
    </RadzenHeader>
    <RadzenSidebar @bind-Expanded="@sidebar1Expanded">
        <NavMenu />
    </RadzenSidebar>
    <RadzenBody>
        <div class="rz-p-4">
            @Body
        </div>
    </RadzenBody>


</RadzenLayout>

@code {
    bool sidebar1Expanded = true;

    private async Task Logout()
    {        
        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Info, Summary = "Logout Realizado", Detail = "Você saiu do sistema com sucesso." });
        NavigationManager.NavigateTo("/login");
    }

    void OnClick(RadzenSplitButtonItem item)
    {
        if (item != null)
        {
            switch (item.Value)
            {
                case "dashboard":
                    NavigationManager.NavigateTo("/");
                    break;
                case "settings":
                    NavigationManager.NavigateTo("/settings");
                    break;
                case "help_outline":
                    NavigationManager.NavigateTo("/help");
                    break;
                case "exit_to_app":
                    Logout();
                    break;
            }
        }
    }
}